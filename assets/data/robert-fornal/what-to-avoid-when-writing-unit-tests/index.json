{"hash":"cfdb86af0d3114c14a6f3aa41fc3156d98a2b903","data":{"session":{"speaker":"Robert Fornal","speaker2":"","bio":"My focus is on front-end development: JavaScript, CSS, SVG, AngularJS and Angular, React, and Ionic. I commonly speak about Quality Engineering, Best Practices, and Front-End Technologies.\n\n\"Learning from my mistakes over the decades, I feel that I have become a solid programmer.\" -- Me","bio2":"","title":"What to Avoid When Writing Unit Tests","abstract":"\"These tests should never have been written. They provide no or little value.\" -ME\n\nTesting code has been described as an \"art form.\" It is, but it should not be. There are many good patterns that should be followed when writing tests. There is even a lifecycle of tests that should be paid some attention. There are also many BAD patterns that developers should be aware of so that they can be avoided (or cleaned up).\n\nThis session will provide a series of examples of bad front-end tests and how to write them correctly.\n- Tests Should Not Be \"Well-Factored\"\n- Keep The Reader In The Test\n- Violate The DRY Principle\n- Testing Too Much\n- Duplication Of Code Logic\n- Bad Test Double\n- Testing The Mock \n- False Positives\n- Testing Private Functionality Directly\n- Excessive Setup","time":"4:15 - 5:15","room":"East Ballroom","linkedin":"https://www.linkedin.com/in/rfornal/","twitter":"https://twitter.com/rfornal","website":"","linkedin2":"","twitter2":"","website2":"","youtube":"https://www.youtube.com/@bob-fornal","youtube2":""}},"context":{}}